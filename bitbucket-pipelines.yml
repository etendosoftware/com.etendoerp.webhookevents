image: maven:3.8.4

clone:
  depth: full

definitions:
  steps:
    - step: &git-police
        name: Git Police Step
        script:
          - printenv
          - echo "-------------------------------------------------------------------------"
          - echo "${DOCKERHUB_PASSWORD}" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
          - docker run -d -p 5000:5000 -e REPO_TOKEN="${ETENDOBOT_TOKEN}" -e PR_ID="$BITBUCKET_PR_ID" -e REPO_NAME="$BITBUCKET_REPO_SLUG" etendo/gitpolice:"${GITPOLICE_VERSION}"
          - echo "-------------------------------------------------------------------------"
          - sleep 10s
          - response=$(curl -s -o response.txt -w "%{http_code}" -X GET http://localhost:5000/api/bitbucket)
          - |
            if [ "$response" -ne 200 ]; then
              echo "API call failed with status code $response"
              cat response.txt
              exit 1
            fi
          - echo "API call successful with status code $response"
          - cat response.txt
        services:
          - docker

    - step: &check-pr-status
        name: Check PR Status Step
        script:
          - apt-get update && apt-get install -y curl jq
          - curl -L -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          - chmod +x /usr/local/bin/jq
          - echo "Checking if the pull request was declined..."
          - > 
            pr_state=$(curl -s -S -f -X GET               -H "Authorization: Basic ${ETENDOBOT_TOKEN}"               "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/pullrequests/${BITBUCKET_PR_ID}" | jq -r '.state')
          - echo "Pull request state $pr_state"
          - |
            if [ "$pr_state" == "DECLINED" ]; then
              echo "Pull request was declined. Skipping subsequent steps."
              echo "PR_DECLINED=true" > pr_status.env
              exit 0
            else
              echo "PR_DECLINED=false" > pr_status.env
              echo "Pull request was not declined. Continuing with subsequent steps."
            fi
        artifacts:
          - pr_status.env
        services:
          - docker

    - step: &make-review
        name: Make Review Step
        script:
          - cat pr_status.env
          - source pr_status.env
          - |
            if [ "$PR_DECLINED" == "true" ]; then
              echo "Skipping Make Review Step because PR is declined."
              exit 0
            fi
          - printenv
          - echo "-------------------------------------------------------------------------"
          - echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
          - docker run -d -p 5000:5000 -e REPO_API_TOKEN="${ETENDOBOT_TOKEN}" -e PULL_REQUEST="${BITBUCKET_PR_ID}" -e PROJECT="${BITBUCKET_REPO_OWNER}" -e REPO_SLUG="${BITBUCKET_REPO_SLUG}" -e OPENAI_API_KEY="${OPENAI_API_KEY}" etendo/code-reviewer:"${REVIEWER_VERSION}"
          - echo "-------------------------------------------------------------------------"
          - sleep 10s
          - response=$(curl -s -o response.txt -w "%{http_code}" -X GET http://localhost:5000/review/bitbucket)
          - |
            if [ "$response" -ne 200 ]; then
              echo "API call failed with status code $response"
              cat response.txt
              exit 1
            fi
          - echo "API call successful with status code $response"
          - cat response.txt
        services:
          - docker

    - step: &build-step
        name: SonarQube analysis
        script:
          - |
            if [ ! -f pr_status.env ]; then
              echo "PR_DECLINED=false" > pr_status.env
            fi
          - cat pr_status.env
          - source pr_status.env
          - |
            if [ "$PR_DECLINED" == "true" ]; then
              echo "Skipping SonarQube analysis because PR was declined."
              exit 0
            fi
          - pipe: sonarsource/sonarqube-scan:1.0.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
              SONAR_EXCLUDE: node_modules, android, ios
  caches:
    sonar: ~/.sonar 

pipelines:
  branches:
    '{master,develop}':
      - step: *build-step
  pull-requests:
    'develop':
      - step:
          script:
          - echo "Skip for develop branch"
          - exit 0
    '**':
      - step: *git-police
      - step: *check-pr-status
      - parallel:
        - step: *make-review
        - step: *build-step
